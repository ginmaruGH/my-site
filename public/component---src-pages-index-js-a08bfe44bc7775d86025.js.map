{"version":3,"sources":["webpack://elementary-elementary/./src/components/blurb.js","webpack://elementary-elementary/./src/components/posts.js","webpack://elementary-elementary/./src/pages/index.js","webpack://elementary-elementary/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://elementary-elementary/./src/utils/helpers.js"],"names":["className","S","layout","formats","src","maxwidth","maxheight","quality","alt","href","Cell","node","pubDate","frontmatter","shortMonthNameDate","postSlug","slugEditing","fields","slug","key","id","Link","to","title","dateTime","published","excerpt","itemProp","dangerouslySetInnerHTML","__html","description","data","map","posts","allMarkdownRemark","nodes","Section","children","props","source","excluded","i","target","sourceKeys","Object","keys","length","indexOf","postMeta","slugify","string","match","x","toLowerCase","join","textArr","split","index","date","dateArr","slice"],"mappings":"uqCAmCA,IAhCY,WAIV,OACE,2BAASA,UAAU,SACjB,uBAAKA,UAAU,aACb,8BACE,gBAAC,EAAAC,EAAD,CACED,UAAU,eACVE,OAAO,cACPC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,IAAI,2BACJC,SAAU,IACVC,UAAW,IACXC,QAAS,GACTC,IAAI,kBARN,uBAWF,uBAAKR,UAAU,cACb,uCACa,wCADb,QAEE,qBAAGS,KAAI,kCAAP,WACA,2BArBS,iD,oECDfC,EAAO,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAERC,EAAUD,EAAKE,YAAYD,SAC7BE,QAAmBH,EAAKE,YAAYD,SACpC,KAEEG,GAAWC,QAAY,GAAGL,EAAKM,OAAOC,MAC5C,OACE,2BAASlB,UAAU,OAAOmB,IAAKR,EAAKS,IAClC,uBAAKpB,UAAU,YACb,gBAAC,EAAAqB,KAAD,CAAMrB,UAAU,YAAYsB,GAAE,QAAUP,GACtC,0BAAKJ,EAAKE,YAAYU,OACtB,wBAAMC,SAAUb,EAAKE,YAAYY,WAAYb,IAE9CD,EAAKe,SACJ,qBACE1B,UAAU,YACV2B,SAAS,cACTC,wBAAyB,CACvBC,OAAQlB,EAAKE,YAAYiB,kBAmBvC,IAVc,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACf,OACE,uBAAK/B,UAAU,SACZ+B,EAAKC,KAAI,SAAArB,GAAI,OACZ,gBAACD,EAAD,CAAMS,IAAKR,EAAKS,GAAIT,KAAMA,U,qICJlC,EAxBkB,SAAC,GAAc,IACzBsB,EADwB,EAAXF,KACAG,kBAAkBC,MAE/BC,EAAU,SAAC,GAAD,IAAGb,EAAH,EAAGA,MAAOc,EAAV,EAAUA,SAAaC,ECX1B,SAAuCC,EAAQC,GAC5D,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IAEIpB,EAAKsB,EAFLC,EAAS,GACTC,EAAaC,OAAOC,KAAKN,GAG7B,IAAKE,EAAI,EAAGA,EAAIE,EAAWG,OAAQL,IACjCtB,EAAMwB,EAAWF,GACbD,EAASO,QAAQ5B,IAAQ,IAC7BuB,EAAOvB,GAAOoB,EAAOpB,IAGvB,OAAOuB,EDDS,gCACd,2CAAaJ,EAAb,CAAoBtC,UAAU,oBAC5B,sBAAIA,UAAU,iBAAiBuB,GAC9Bc,IAIL,OACE,gBAAC,IAAD,CAAQrC,UAAU,aAChB,gBAAC,IAAD,CAAKgD,UAAQ,IACb,gBAAC,IAAD,MAGA,gBAACZ,EAAD,CAASb,MAAM,aACb,gBAAC,IAAD,CAAOQ,KAAME,Q,kCETd,SAASgB,EAAQC,GACtB,OACEA,GACAA,EACGC,MACC,sEAEDnB,KAAI,SAACoB,GAAD,OAAOA,EAAEC,iBACbC,KAAK,K,iFAIL,IAAMtC,EAAc,SAACkC,GAC1B,IAAMK,EAAUL,EAAOM,MAAM,KACvBC,EAAQF,EAAQT,OAOtB,OALIW,EAAQ,EACJ,IAAOF,EAAQE,EAAQ,GAAvB,IAEGP,GAKApC,EAAqB,SAAC4C,GACjC,IAAMC,EAAUD,EAAKF,MAAM,KAG3B,OAFAG,EAAQ,GAAQA,EAAQ,GAAGC,MAAM,EAAG,GAApC,IACeD,EAAQL,KAAK","file":"component---src-pages-index-js-a08bfe44bc7775d86025.js","sourcesContent":["import React from \"react\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\nconst Bio = () => {\n\n  const authorSummary = `I'm unused to  PC and Web, learning now!`\n\n  return (\n    <section className=\"blurb\">\n      <div className=\"container\">\n        <figure>\n          <StaticImage\n            className=\"blurb-avatar\"\n            layout=\"constrained\"\n            formats={[\"AUTO\", \"WEBP\", \"AVIF\"]}\n            src=\"../../static/gorilla.jpg\"\n            maxwidth={100}\n            maxheight={100}\n            quality={95}\n            alt=\"Profile picture\"\n          />\n        </figure>\n        <div className=\"blurb-text\">\n          <p>\n            Written by <span>Ginmaru.</span> {` `}\n            <a href={`https://twitter.com/@gin_maru_`}>Twitter</a>\n            <br />\n            {authorSummary}\n          </p>\n        </div>\n      </div>\n    </section>\n  )\n}\n\nexport default Bio\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport { slugEditing, shortMonthNameDate } from \"../utils/helpers\"\n\nconst Cell = ({ node }) => {\n\n  const pubDate = node.frontmatter.pubDate\n    ? shortMonthNameDate(node.frontmatter.pubDate)\n    : null\n\n  const postSlug = slugEditing(`${node.fields.slug}`)\n  return (\n    <article className=\"post\" key={node.id}>\n      <div className=\"post-row\">\n        <Link className=\"post-link\" to={`/blog${postSlug}`}>\n          <h3>{node.frontmatter.title}</h3>\n          <time dateTime={node.frontmatter.published}>{pubDate}</time>\n        </Link>\n        {node.excerpt && (\n          <p\n            className=\"paragraph\"\n            itemProp=\"description\"\n            dangerouslySetInnerHTML={{\n              __html: node.frontmatter.description,\n            }}\n          />\n        )}\n      </div>\n    </article>\n  )\n}\n\nconst Posts = ({ data }) => {\n  return (\n    <div className=\"posts\">\n      {data.map(node => (\n        <Cell key={node.id} node={node} />\n      ))}\n    </div>\n  )\n}\n\nexport default Posts\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Blurb from \"../components/blurb\"\nimport Posts from \"../components/posts\"\nimport Seo from \"../components/seo\"\n\nconst BlogIndex = ({ data }) => {\n  const posts = data.allMarkdownRemark.nodes\n\n  const Section = ({ title, children, ...props }) => (\n    <section {...props} className=\"container index\">\n      <h2 className=\"section-title\">{title}</h2>\n      {children}\n    </section>\n  )\n\n  return (\n    <Layout className=\"main-page\">\n      <Seo postMeta />\n      <Blurb />\n      {/* <Section title=\"Summaries(Plans)\">\n      </Section> */}\n      <Section title=\"All Posts\">\n        <Posts data={posts} />\n      </Section>\n\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___pubDate], order: DESC }\n      skip: 0\n      limit: 1000\n    ) {\n      nodes {\n        id\n        excerpt(format: HTML, pruneLength: 60, truncate: true)\n        fields {\n          slug\n        }\n        frontmatter {\n          published: pubDate\n          pubDate(formatString: \"MMMM DD, YYYY\")\n          modified: modDate\n          modDate(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n        }\n      }\n    }\n  }\n`\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","export function getSimplifiedPosts(posts, options = {}) {\n  return posts.map((post) => ({\n    id: post.node.id,\n    date: post.node.frontmatter.date,\n    slug: post.node.fields.slug,\n    tags: post.node.frontmatter.tags,\n    categories: post.node.frontmatter.categories,\n    title: post.node.frontmatter.title,\n    description: post.node.frontmatter.description,\n    topic: post.node.frontmatter.topic,\n    ...(options.thumbnails && {\n      thumbnail: post.node.frontmatter.thumbnail.childImageSharp.fixed,\n    }),\n  }))\n}\n\nexport function slugify(string) {\n  return (\n    string &&\n    string\n      .match(\n        /[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g\n      )\n      .map((x) => x.toLowerCase())\n      .join('-')\n  )\n}\n\nexport const slugEditing = (string) => {\n  const textArr = string.split(\"/\")\n  const index = textArr.length\n  let result\n  if (index > 3) {\n    result = `/${textArr[index - 2]}/`\n  } else {\n    result = string\n  }\n  return result\n}\n\nexport const shortMonthNameDate = (date) => {\n  const dateArr = date.split(\" \")\n  dateArr[0] = `${dateArr[0].slice(0, 3)}.`\n  const result = dateArr.join(\" \")\n  return result\n}\n"],"sourceRoot":""}